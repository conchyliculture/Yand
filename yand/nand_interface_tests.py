"""Tests for the device module."""

import unittest

from yand import nand_interface


# pylint: disable=protected-access, line-too-long

class YandTest(unittest.TestCase):
    """Tests for the device module"""

    def testParseONFI(self):
        """tests device.NAND."""
        fake_onfi = bytearray([
            0x4F, 0x4E, 0x46, 0x49,
            0x1E, 0x00,
            0xD8, 0x01,
            0xFF, 0x03,
            0x00, 0x00,
            0x03, 0x00,
            0x03,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x4D, 0x49, 0x43, 0x52, 0x4F, 0x4E, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
            0x4D, 0x54, 0x32, 0x39, 0x46, 0x33, 0x32, 0x47, 0x30, 0x38, 0x43, 0x42, 0x41, 0x43, 0x41, 0x57, 0x50, 0x20, 0x20, 0x20,
            0x2C,
            0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x10, 0x00, 0x00,
            0xE0, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x01, 0x00, 0x00,
            0x00, 0x10, 0x00, 0x00,
            0x01,
            0x23,
        ])
        nand = nand_interface.NandInterface()
        nand._ParseONFIData(fake_onfi)
        self.assertEqual(nand.device_manufacturer, 'MICRON      ')
        self.assertEqual(nand.device_model, 'MT29F32G08CBACAWP   ')
        self.assertEqual(nand.manufacturer_id, 0x2c)
        self.assertEqual(nand.oob_size, 0xE0)
        self.assertEqual(nand.page_size, 0xE0 + 0x1000)
        self.assertEqual(nand.number_of_blocks, 4096)
        self.assertEqual(nand.address_cycles, 5)

        self.assertEqual(nand.GetTotalPages(), 1048576)
        self.assertEqual(nand.GetTotalSize(), 4529848320)
